{
  "openapi": "3.0.1",
  "info": {
    "title": "HRDepartment.Api",
    "version": "1.0"
  },
  "paths": {
    "/BenefitType": {
      "get": {
        "tags": [
          "BenefitType"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BenefitTypeGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BenefitTypeGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BenefitTypeGetDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BenefitType"
        ],
        "summary": "Добавляет новый тип льготы.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BenefitTypePostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BenefitTypePostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BenefitTypePostDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BenefitTypeGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BenefitTypeGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BenefitTypeGetDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/BenefitType/{id}": {
      "get": {
        "tags": [
          "BenefitType"
        ],
        "summary": "Получает тип льготы по уникальному идентификатору.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BenefitTypeGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BenefitTypeGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BenefitTypeGetDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BenefitType"
        ],
        "summary": "Обновляет информацию о существующем типе льготы.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BenefitTypePostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BenefitTypePostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BenefitTypePostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BenefitTypeGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BenefitTypeGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BenefitTypeGetDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BenefitType"
        ],
        "summary": "Удаляет тип льготы по уникальному идентификатору.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Department": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Получает список всех отделов.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DepartmentGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DepartmentGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DepartmentGetDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Department"
        ],
        "summary": "Добавляет новый отдел.",
        "requestBody": {
          "description": "Отдел для добавления.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentGetDto"
                }
              }
            }
          }
        }
      }
    },
    "/Department/{id}": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Получает отдел по уникальному идентификатору.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор отдела.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentGetDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Department"
        ],
        "summary": "Обновляет информацию о существующем отделе.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор отдела для обновления.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Обновленная информация о отделе.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentGetDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Department"
        ],
        "summary": "Удаляет отдел по уникальному идентификатору.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор отдела для удаления.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Employee": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Получает список всех сотрудников.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeGetDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Добавляет нового сотрудника.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeePostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeePostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeePostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeGetDto"
                }
              }
            }
          }
        }
      }
    },
    "/Employee/{id}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Получает сотрудника по его уникальному идентификатору.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeGetDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Employee"
        ],
        "summary": "Обновляет информацию о существующем сотруднике.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeePostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeePostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeePostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeGetDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Employee"
        ],
        "summary": "Удаляет сотрудника по его уникальному идентификатору.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/EmployeeBenefit": {
      "get": {
        "tags": [
          "EmployeeBenefit"
        ],
        "summary": "Получает список всех льгот сотрудников.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeBenefitGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeBenefitGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeBenefitGetDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmployeeBenefit"
        ],
        "summary": "Добавляет новую льготу для сотрудника.",
        "requestBody": {
          "description": "Данные для добавления новой льготы.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeBenefitPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeBenefitPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeBenefitPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeBenefitGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeBenefitGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeBenefitGetDto"
                }
              }
            }
          }
        }
      }
    },
    "/EmployeeBenefit/{id}": {
      "get": {
        "tags": [
          "EmployeeBenefit"
        ],
        "summary": "Получает льготу сотрудника по уникальному идентификатору.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор льготы.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeBenefitGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeBenefitGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeBenefitGetDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployeeBenefit"
        ],
        "summary": "Обновляет информацию о существующей льготе сотрудника.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор льготы для обновления.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Обновленная информация о льготе.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeBenefitPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeBenefitPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeBenefitPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "EmployeeBenefit"
        ],
        "summary": "Удаляет льготу сотрудника по уникальному идентификатору.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор льготы для удаления.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/EmployeePosition": {
      "get": {
        "tags": [
          "EmployeePosition"
        ],
        "summary": "Получает список всех связей между сотрудниками и должностями.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeePositionGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeePositionGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeePositionGetDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmployeePosition"
        ],
        "summary": "Добавляет новую связь между сотрудником и должностью.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeePositionPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeePositionPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeePositionPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePositionGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePositionGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePositionGetDto"
                }
              }
            }
          }
        }
      }
    },
    "/EmployeePosition/{id}": {
      "get": {
        "tags": [
          "EmployeePosition"
        ],
        "summary": "Получает связь между сотрудником и должностью по указанному идентификатору.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePositionGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePositionGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePositionGetDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployeePosition"
        ],
        "summary": "Обновляет информацию о связи между сотрудником и должностью по указанному идентификатору.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeePositionPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeePositionPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeePositionPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "EmployeePosition"
        ],
        "summary": "Удаляет связь между сотрудником и должностью по указанному идентификатору.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Position": {
      "get": {
        "tags": [
          "Position"
        ],
        "summary": "Получает список всех должностей на предприятии.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PositionGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PositionGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PositionGetDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Position"
        ],
        "summary": "Добавляет новую должность на предприятии.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PositionPostDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PositionGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PositionGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PositionGetDto"
                }
              }
            }
          }
        }
      }
    },
    "/Position/{id}": {
      "get": {
        "tags": [
          "Position"
        ],
        "summary": "Получает должность по указанному идентификатору.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PositionGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PositionGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PositionGetDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Position"
        ],
        "summary": "Обновляет информацию о должности по указанному идентификатору.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PositionPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PositionPostDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": [
          "Position"
        ],
        "summary": "Удаляет должность по указанному идентификатору.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/Workshop": {
      "get": {
        "tags": [
          "Workshop"
        ],
        "summary": "Получает список всех цехов на предприятии.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkshopGetDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkshopGetDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkshopGetDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Workshop"
        ],
        "summary": "Добавляет новый цех на предприятии.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkshopPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkshopPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkshopPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkshopGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkshopGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkshopGetDto"
                }
              }
            }
          }
        }
      }
    },
    "/Workshop/{id}": {
      "get": {
        "tags": [
          "Workshop"
        ],
        "summary": "Получает цех по указанному идентификатору.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkshopGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkshopGetDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkshopGetDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Workshop"
        ],
        "summary": "Обновляет информацию о цехе по указанному идентификатору.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkshopPostDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkshopPostDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkshopPostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Workshop"
        ],
        "summary": "Удаляет цех по указанному идентификатору.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор цеха для удаления.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BenefitTypeGetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Уникальный идентификатор типа льготы",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Название типа льготы",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO для типа льготы"
      },
      "BenefitTypePostDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Название типа льготы",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO для создания нового типа льготы"
      },
      "DepartmentGetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Уникальный идентификатор отдела",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Название отдела",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO для получения информации об отделе"
      },
      "DepartmentPostDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Название отдела",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO для создания нового отдела"
      },
      "EmployeeBenefitGetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Уникальный идентификатор записи о льготе сотрудника",
            "format": "int32"
          },
          "employeeId": {
            "type": "integer",
            "description": "Идентификатор сотрудника, который получил льготу",
            "format": "int32"
          },
          "employeeName": {
            "type": "string",
            "description": "Имя сотрудника, который получил льготу",
            "nullable": true
          },
          "benefitTypeId": {
            "type": "integer",
            "description": "Идентификатор типа льготы",
            "format": "int32"
          },
          "benefitTypeName": {
            "type": "string",
            "description": "Название типа льготы, которую получил сотрудник",
            "nullable": true
          },
          "issueDate": {
            "type": "string",
            "description": "Дата выдачи льготы",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "DTO для получения информации о льготах сотрудника"
      },
      "EmployeeBenefitPostDto": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Идентификатор сотрудника, который получает льготу",
            "format": "int32"
          },
          "benefitTypeId": {
            "type": "integer",
            "description": "Идентификатор типа льготы",
            "format": "int32"
          },
          "issueDate": {
            "type": "string",
            "description": "Дата выдачи льготы",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "DTO для создания новой записи о льготе сотрудника"
      },
      "EmployeeGetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Уникальный идентификатор сотрудника",
            "format": "int32"
          },
          "regNumber": {
            "type": "string",
            "description": "Регистрационный номер сотрудника",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "Имя сотрудника",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Фамилия сотрудника",
            "nullable": true
          },
          "patronymic": {
            "type": "string",
            "description": "Отчество сотрудника",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "description": "Дата рождения сотрудника",
            "format": "date-time"
          },
          "workshopId": {
            "type": "integer",
            "description": "Идентификатор цеха, к которому относится сотрудник",
            "format": "int32"
          },
          "workPhoneNumber": {
            "type": "string",
            "description": "Рабочий номер телефона сотрудника",
            "nullable": true
          },
          "personalPhoneNumber": {
            "type": "string",
            "description": "Личный номер телефона сотрудника",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Адрес проживания сотрудника",
            "nullable": true
          },
          "familyMembersCount": {
            "type": "integer",
            "description": "Количество членов семьи у сотрудника",
            "format": "int32"
          },
          "childrenCount": {
            "type": "integer",
            "description": "Количество детей у сотрудника",
            "format": "int32"
          },
          "maritalStatus": {
            "type": "string",
            "description": "Семейное положение сотрудника",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO для получения информации о сотруднике"
      },
      "EmployeePositionGetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Уникальный идентификатор записи о позиции сотрудника",
            "format": "int32"
          },
          "employeeId": {
            "type": "integer",
            "description": "Идентификатор сотрудника, связанного с должностью",
            "format": "int32"
          },
          "employeeName": {
            "type": "string",
            "description": "Имя сотрудника, связанного с этой должностью",
            "nullable": true
          },
          "positionId": {
            "type": "integer",
            "description": "Идентификатор должности, на которой работает сотрудник",
            "format": "int32"
          },
          "positionName": {
            "type": "string",
            "description": "Название должности, которую занимает сотрудник",
            "nullable": true
          },
          "employmentDate": {
            "type": "string",
            "description": "Дата принятия сотрудника на данную должность",
            "format": "date-time"
          },
          "retirementDate": {
            "type": "string",
            "description": "Дата увольнения сотрудника с должности",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO для получения информации о позициях сотрудника"
      },
      "EmployeePositionPostDto": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "description": "Идентификатор сотрудника, связанного с должностью",
            "format": "int32"
          },
          "positionId": {
            "type": "integer",
            "description": "Идентификатор должности, на которой работает сотрудник",
            "format": "int32"
          },
          "employmentDate": {
            "type": "string",
            "description": "Дата принятия сотрудника на данную должность",
            "format": "date-time"
          },
          "retirementDate": {
            "type": "string",
            "description": "Дата увольнения сотрудника с должности (может быть null)",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO для создания новой записи о позиции сотрудника"
      },
      "EmployeePostDto": {
        "type": "object",
        "properties": {
          "regNumber": {
            "type": "string",
            "description": "Регистрационный номер сотрудника",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "Имя сотрудника",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Фамилия сотрудника",
            "nullable": true
          },
          "patronymic": {
            "type": "string",
            "description": "Отчество сотрудника",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "description": "Дата рождения сотрудника",
            "format": "date-time"
          },
          "workshopId": {
            "type": "integer",
            "description": "Идентификатор цеха, к которому относится сотрудник",
            "format": "int32"
          },
          "workPhoneNumber": {
            "type": "string",
            "description": "Рабочий номер телефона сотрудника",
            "nullable": true
          },
          "personalPhoneNumber": {
            "type": "string",
            "description": "Личный номер телефона сотрудника",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Адрес проживания сотрудника",
            "nullable": true
          },
          "familyMembersCount": {
            "type": "integer",
            "description": "Количество членов семьи у сотрудника",
            "format": "int32"
          },
          "childrenCount": {
            "type": "integer",
            "description": "Количество детей у сотрудника",
            "format": "int32"
          },
          "maritalStatus": {
            "type": "string",
            "description": "Семейное положение сотрудника",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "description": "Идентификатор отдела, к которому относится сотрудник",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "DTO для создания нового сотрудника"
      },
      "PositionGetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Уникальный идентификатор должности",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Название должности",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "description": "Идентификатор отдела, к которому относится должность",
            "format": "int32"
          },
          "departmentName": {
            "type": "string",
            "description": "Название отдела, к которому относится должность",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO для получения информации о должностях"
      },
      "PositionPostDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Название должности",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "description": "Идентификатор отдела, к которому относится должность",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "DTO для создания новой должности"
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {}
      },
      "WorkshopGetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Уникальный идентификатор цеха",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Название цеха",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO для получения информации о цехах"
      },
      "WorkshopPostDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Название цеха",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DTO для создания нового цеха"
      }
    }
  }
}