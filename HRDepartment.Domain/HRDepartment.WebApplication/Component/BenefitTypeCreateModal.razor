@using HRDepartment.WebApplication.Api
@inject IHRDepartmentApiWrapper HRDepartmentApi

<Modal @ref="BenefitTypeModal">
    <ModalContent Centered>
        <Form>
            <ModalHeader>
                <ModalTitle>Типы льгот</ModalTitle>
                <CloseButton Clicked="CloseBenefitTypeModalAsync" />
            </ModalHeader>

            <ModalBody>
                <Field>
                    <FieldLabel>Название типа льготы</FieldLabel>
                    <TextEdit @bind-Text="NewBenefitType.Name" />
                </Field>
            </ModalBody>

            <ModalFooter>
                <Button Color="Color.Secondary" Clicked="CloseBenefitTypeModalAsync">Отмена</Button>
                <Button Color="Color.Primary" Clicked="CreateBenefitTypeAsync">Создать</Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

@code {
    [Parameter]
    public EventCallback OnBenefitTypeAdded { get; set; }

    private Modal BenefitTypeModal { get; set; } = new();
    private BenefitTypePostDto NewBenefitType { get; set; } = new();

    public async Task Show() => await BenefitTypeModal.Show();

    private async Task CloseBenefitTypeModalAsync() => await BenefitTypeModal.Hide();

    private async Task CreateBenefitTypeAsync()
    {
        // Создание нового типа льготы
        //await HRDepartmentApi.CreateBenefitType(NewBenefitType); // Убедитесь, что метод принимает BenefitTypePostDto
        await BenefitTypeModal.Hide();
        await OnBenefitTypeAdded.InvokeAsync();
    }
}